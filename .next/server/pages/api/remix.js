"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/remix";
exports.ids = ["pages/api/remix"];
exports.modules = {

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "@anthropic-ai/sdk":
/*!************************************!*\
  !*** external "@anthropic-ai/sdk" ***!
  \************************************/
/***/ ((module) => {

module.exports = import("@anthropic-ai/sdk");;

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fremix&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fremix.js&middlewareConfigBase64=e30%3D!":
/*!****************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fremix&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fremix.js&middlewareConfigBase64=e30%3D! ***!
  \****************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_remix_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages/api/remix.js */ \"(api)/./pages/api/remix.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_pages_api_remix_js__WEBPACK_IMPORTED_MODULE_3__]);\n_pages_api_remix_js__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_remix_js__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_remix_js__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/remix\",\n        pathname: \"/api/remix\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _pages_api_remix_js__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRnJlbWl4JnByZWZlcnJlZFJlZ2lvbj0mYWJzb2x1dGVQYWdlUGF0aD0uJTJGcGFnZXMlMkZhcGklMkZyZW1peC5qcyZtaWRkbGV3YXJlQ29uZmlnQmFzZTY0PWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDTDtBQUMxRDtBQUNpRDtBQUNqRDtBQUNBLGlFQUFlLHdFQUFLLENBQUMsZ0RBQVEsWUFBWSxFQUFDO0FBQzFDO0FBQ08sZUFBZSx3RUFBSyxDQUFDLGdEQUFRO0FBQ3BDO0FBQ08sd0JBQXdCLGdIQUFtQjtBQUNsRDtBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxZQUFZO0FBQ1osQ0FBQzs7QUFFRCxxQyIsInNvdXJjZXMiOlsid2VicGFjazovL3JlbWl4ZXIvP2Y3YWUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGFnZXNBUElSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL3BhZ2VzLWFwaS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBob2lzdCB9IGZyb20gXCJuZXh0L2Rpc3QvYnVpbGQvdGVtcGxhdGVzL2hlbHBlcnNcIjtcbi8vIEltcG9ydCB0aGUgdXNlcmxhbmQgY29kZS5cbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIuL3BhZ2VzL2FwaS9yZW1peC5qc1wiO1xuLy8gUmUtZXhwb3J0IHRoZSBoYW5kbGVyIChzaG91bGQgYmUgdGhlIGRlZmF1bHQgZXhwb3J0KS5cbmV4cG9ydCBkZWZhdWx0IGhvaXN0KHVzZXJsYW5kLCBcImRlZmF1bHRcIik7XG4vLyBSZS1leHBvcnQgY29uZmlnLlxuZXhwb3J0IGNvbnN0IGNvbmZpZyA9IGhvaXN0KHVzZXJsYW5kLCBcImNvbmZpZ1wiKTtcbi8vIENyZWF0ZSBhbmQgZXhwb3J0IHRoZSByb3V0ZSBtb2R1bGUgdGhhdCB3aWxsIGJlIGNvbnN1bWVkLlxuZXhwb3J0IGNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IFBhZ2VzQVBJUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLlBBR0VTX0FQSSxcbiAgICAgICAgcGFnZTogXCIvYXBpL3JlbWl4XCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvcmVtaXhcIixcbiAgICAgICAgLy8gVGhlIGZvbGxvd2luZyBhcmVuJ3QgdXNlZCBpbiBwcm9kdWN0aW9uLlxuICAgICAgICBidW5kbGVQYXRoOiBcIlwiLFxuICAgICAgICBmaWxlbmFtZTogXCJcIlxuICAgIH0sXG4gICAgdXNlcmxhbmRcbn0pO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYWdlcy1hcGkuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fremix&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fremix.js&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./pages/api/remix.js":
/*!****************************!*\
  !*** ./pages/api/remix.js ***!
  \****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ tweetsFromPost)\n/* harmony export */ });\n/* harmony import */ var _anthropic_ai_sdk__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @anthropic-ai/sdk */ \"@anthropic-ai/sdk\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_anthropic_ai_sdk__WEBPACK_IMPORTED_MODULE_0__]);\n_anthropic_ai_sdk__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n// This file is for a Next.js API route, if you're using Next.js\n// If using a different setup, you'd need to create your own API endpoint\n\nasync function tweetsFromPost(req, res) {\n    if (req.method !== \"POST\") {\n        return res.status(405).json({\n            error: \"Method not allowed\"\n        });\n    }\n    try {\n        const { text, remixType } = req.body;\n        // Input validation\n        if (!text || !text.trim()) {\n            return res.status(400).json({\n                error: \"Text is required\"\n            });\n        }\n        if (!remixType) {\n            return res.status(400).json({\n                error: \"Remix type is required\"\n            });\n        }\n        // Log for debugging\n        console.log(`Processing ${remixType} request for text: ${text.substring(0, 50)}...`);\n        // Construct the prompt based on remix type\n        let prompt = \"\";\n        switch(remixType){\n            case \"summarize\":\n                prompt = `Convert the following text into 3-5 tweets, each STRICTLY under 280 characters. DO NOT include any hashtags (#) in any of the tweets. Format each tweet with \"TWEET:\" at the beginning and end each tweet with \"ENDTWEET\" so they can be clearly separated:\n\n${text}`;\n                break;\n            case \"simplify\":\n                prompt = `Convert the following text into 3-5 tweets in simple, easy-to-understand language. Each tweet MUST be under 280 characters. DO NOT include any hashtags (#) in any of the tweets. Format each tweet with \"TWEET:\" at the beginning and end each tweet with \"ENDTWEET\" so they can be clearly separated:\n\n${text}`;\n                break;\n            case \"professional\":\n                prompt = `Convert the following text into 3-5 tweets in a professional, formal style. Each tweet MUST be under 280 characters. DO NOT include any hashtags (#) in any of the tweets. Format each tweet with \"TWEET:\" at the beginning and end each tweet with \"ENDTWEET\" so they can be clearly separated:\n\n${text}`;\n                break;\n            case \"creative\":\n                prompt = `Convert the following text into 3-5 tweets in a creative, engaging way. Each tweet MUST be under 280 characters. DO NOT include any hashtags (#) in any of the tweets. Format each tweet with \"TWEET:\" at the beginning and end each tweet with \"ENDTWEET\" so they can be clearly separated:\n\n${text}`;\n                break;\n            case \"academic\":\n                prompt = `Convert the following text into 3-5 tweets in an academic style. Each tweet MUST be under 280 characters. DO NOT include any hashtags (#) in any of the tweets. Format each tweet with \"TWEET:\" at the beginning and end each tweet with \"ENDTWEET\" so they can be clearly separated:\n\n${text}`;\n                break;\n            case \"technical\":\n                prompt = `Convert the following text into 3-5 tweets in a technical style suitable for documentation. Each tweet MUST be under 280 characters. DO NOT include any hashtags (#) in any of the tweets. Format each tweet with \"TWEET:\" at the beginning and end each tweet with \"ENDTWEET\" so they can be clearly separated:\n\n${text}`;\n                break;\n            case \"marketing\":\n                prompt = `Convert the following text into 3-5 tweets as compelling marketing copy with clear value propositions. Each tweet MUST be under 280 characters. DO NOT include any hashtags (#) in any of the tweets. Format each tweet with \"TWEET:\" at the beginning and end each tweet with \"ENDTWEET\" so they can be clearly separated:\n\n${text}`;\n                break;\n            case \"friendly\":\n                prompt = `Convert the following text into 3-5 tweets in a friendly, casual tone. Each tweet MUST be under 280 characters. DO NOT include any hashtags (#) in any of the tweets. Format each tweet with \"TWEET:\" at the beginning and end each tweet with \"ENDTWEET\" so they can be clearly separated:\n\n${text}`;\n                break;\n            default:\n                prompt = `Convert the following text into 3-5 tweets. Each tweet MUST be under 280 characters. DO NOT include any hashtags (#) in any of the tweets. Format each tweet with \"TWEET:\" at the beginning and end each tweet with \"ENDTWEET\" so they can be clearly separated:\n\n${text}`;\n        }\n        console.log(\"API Key available:\", !!process.env.CLAUDE_API_KEY);\n        if (!process.env.CLAUDE_API_KEY) {\n            return res.status(500).json({\n                error: \"API key not configured. Please set CLAUDE_API_KEY in .env.local\"\n            });\n        }\n        // Initialize Anthropic client\n        const anthropic = new _anthropic_ai_sdk__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n            apiKey: process.env.CLAUDE_API_KEY\n        });\n        // Make call to Claude API using the latest SDK\n        console.log(\"Making request to Claude API...\");\n        const response = await anthropic.messages.create({\n            model: \"claude-3-5-sonnet-20240620\",\n            max_tokens: 1000,\n            temperature: 0.7,\n            messages: [\n                {\n                    role: \"user\",\n                    content: prompt\n                }\n            ]\n        });\n        console.log(\"Claude API response received\");\n        // Process the response\n        let resultText = \"\";\n        let tweets = [];\n        if (response.content && Array.isArray(response.content) && response.content.length > 0) {\n            // Extract text from content blocks\n            resultText = response.content.filter((block)=>block.type === \"text\").map((block)=>block.text).join(\"\\n\");\n            // Extract tweets from the formatted response\n            const tweetRegex = /TWEET:(.*?)ENDTWEET/gs;\n            let match;\n            while((match = tweetRegex.exec(resultText)) !== null){\n                const tweetContent = match[1].trim();\n                if (tweetContent) {\n                    tweets.push(tweetContent);\n                }\n            }\n            // If no tweets were extracted with the regex, try a fallback method\n            if (tweets.length === 0) {\n                // Try splitting by newlines and filtering for potential tweets\n                const lines = resultText.split(\"\\n\");\n                for (const line of lines){\n                    const trimmedLine = line.trim();\n                    // Look for lines that might be tweets (not too short, not prefixed with common formatting)\n                    if (trimmedLine.length > 20 && trimmedLine.length <= 280 && !trimmedLine.startsWith(\"TWEET\") && !trimmedLine.startsWith(\"#\") && !trimmedLine.startsWith(\"```\")) {\n                        tweets.push(trimmedLine);\n                    }\n                }\n            }\n            // Remove any hashtags that might have been included\n            tweets = tweets.map((tweet)=>{\n                // Replace any hashtag word with the same word without the # symbol\n                return tweet.replace(/#(\\w+)/g, \"$1\");\n            });\n        } else {\n            console.error(\"Unexpected API response format:\", response);\n            return res.status(500).json({\n                error: \"Unexpected API response format\",\n                details: JSON.stringify(response)\n            });\n        }\n        console.log(\"Successfully processed request\");\n        return res.status(200).json({\n            result: resultText,\n            tweets: tweets\n        });\n    } catch (error) {\n        console.error(\"Error processing remix request:\", error);\n        return res.status(500).json({\n            error: \"Failed to remix content\",\n            message: error.message,\n            stack:  true ? error.stack : 0\n        });\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/remix.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fremix&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fremix.js&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();